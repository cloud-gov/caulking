title = "gitleaks config"

[extend]
useDefault = true

[[allowlists]]
	description = "general allowlists"
	paths = [
		'''(.*?)(jpg|gif|doc|pdf|bin|svg|png)$''',
		'''development.bats''',
		'''caulked.bats''',
		'''local.toml'''
	]
	regexes	= ['''CHANGEME|changeme|feedabee|not-actually-secret|EXAMPLE|23.22.13.113|1234567890''']

# If IPv4 is overbroad, cloud.gov external IPs may all be nonsensitive
# and we can change match to (10|172|192). in the first octet.
[[rules]]
	id = "ipv4"
	description = "IPv4 addresses"
	regex = '''\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b'''
	tags = ["IPv4", "IP", "addresses"]
	[[rules.allowlists]]
		regexes = [
			'''(169.254.169.254|127.0.0.\d+|23.22.13.113)''', # 23.22.13.113 is gsa.gov
			'''\b0\.(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b''' # OK to start w/ 0.
		]
		paths = ['''(Gemfile.lock)$''']

[[rules]]
	id = "s3config"
	description = "s3config"
	regex = '''(?i)(dbpasswd|dbuser|dbname|dbhost|api_key|apikey|key|api|password|user|guid|hostname|pw|auth)(.{0,3})?([0-9a-zA-Z-_\/+!{}=]{4,120})'''
	path = '''(?i)s3cfg$'''

[[rules]]
	id = "yaml-secrets"
	description = "yaml secrets"
	regex = '''(?i)(password|enc.key|auth.pass)"?:\s+(.*)'''
	path = '''(?i)(\.yml|\.yaml)'''
	tags = ["yaml"]
	secretGroup = 2
	[[rules.allowlists]]
		description = "ignore substituted values and examples"
		regexes = ['''(\(\(.*\)\)|\{\{.*\}\})''']

[[rules]]
	id = "email"
	description = "Email except non-pii business email"
	regex = '''(.{0,48}?)([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4})'''
	secretGroup = 2
	tags = ["email"]
	[[rules.allowlists]]
		regexes = ['''(?i)@(cloud.gov|gsa.gov|github.com)''']
		paths = [
			'''Godeps._workspace''',
			'''(composer.lock)$'''
		]
	[[rules.allowlists]]
		regexTarget = "match"
		regexes = ['''(?i)(Author|Copyright|Contact)''']

[[rules]]
	id = "generic-api-key"
	regex = '''(?i)[\w.-]{0,50}?(?:access|auth|(?-i:[Aa]pi|API)|credential|creds|key|passw(?:or)?d|secret|token)(?:[ \t\w.-]{0,20})[\s'"]{0,3}(?:=|>|:{1,3}=|\|\||:|=>|\?=|,)[\x60('"\s=]*([^\x60'"]{10,150}|[a-z0-9][a-z0-9+\/]{11,}={0,3})(?:[\x60'"\s;]|\\[nr]|$)'''
	entropy = 3.25

[[rules]]
	id = "generic-username"
	description = "Generic Username"
	regex = '''(?i)(?:dbuser|user)(?:.{0,20})?['"]([0-9a-zA-Z-_\\+!{}@\./=]{4,120})['"]'''
	tags = ["key", "username", "generic"]
	[[rules.allowlists]]
		description = "A username in a terraform file and programs is not a leak"
		regexTarget = "match"
		regexes = [
			'''\w+?username\w+=''',
			# ignore username properties set in templates. for example:
			#  	username': '<%= p('cloudfoundry.user'
			'''(username)[\'\"]{0,1}[:=]\s{0,1}[\'\"]{0,1}\<\%\=\s{0,1}p\('''
		]
		stopwords = [
			"user_agent"
		]
		paths = [
			'''\.(tf|tfvars|rb|go|py|js)$'''
		]

[[rules]]
	id = "generic-hostname"
	description = "Rules to find hostnames"
	regex = '''(?i)[\w.-]{0,50}?(?:dbname|hostname)(?:[ \t\w.-]{0,20})[\s'"]{0,3}(?:=|>|:{1,3}=|\|\||:|=>|\?=|,)[\x60('"\s=]*([^\x60'"]{1,150}|[a-z0-9][a-z0-9+\/]{11,}={0,3})(?:[\x60'"\s;]|\\[nr]|$)'''
	tags = ["hostname", "generic"]

[[rules]]
	id = "suspicious-file-extensions"
	description = "File name extensions of credentials"
	path = '''(?i)\.(pgpass|pem|key)'''
	tags = ["file"]

[[rules]]
	id = "suspicious-filenames"
	description = "File names of credentials"
	path = '''(?i)(id_rsa|passwd|pgpass|shadow)'''
